// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique @db.VarChar(255)
  password        String            @db.VarChar(255)
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  Session         Session[]
  CashItem        CashItem[]
  CashRegister    CashRegister[]
  VehicleType     VehicleType[]
  VehicleRegister VehicleRegister[]

  @@map("users")
}

model Session {
  id         Int      @id @default(autoincrement())
  user_id    Int
  User       User     @relation(fields: [user_id], references: [id])
  token      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("sessions")
}

model CashItem {
  id           Int            @id @default(autoincrement())
  cash_type    CashType
  value        Int            @unique
  user_id      Int
  User         User           @relation(fields: [user_id], references: [id])
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  CashRegister CashRegister[]

  @@map("cash_item")
}

enum CashType {
  COIN
  NOTE
}

model CashRegister {
  id               Int             @id @default(autoincrement())
  cash_item_id     Int
  CashItem         CashItem        @relation(fields: [cash_item_id], references: [id])
  quantity         Int
  amount           Int
  transaction_type TransactionType
  user_id          Int
  User             User            @relation(fields: [user_id], references: [id])
  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt

  @@map("cash_register")
}

enum TransactionType {
  INFLOW
  OUTFLOW
}

model VehicleType {
  id              Int               @id @default(autoincrement())
  vehicle_type    String            @unique @db.VarChar(255)
  hour_hate       Int
  user_id         Int
  User            User              @relation(fields: [user_id], references: [id])
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  VehicleRegister VehicleRegister[]

  @@map("vehicle_type")
}

model VehicleRegister {
  id              Int         @id @default(autoincrement())
  vehicle_type_id Int
  VehicleType     VehicleType @relation(fields: [vehicle_type_id], references: [id])
  plate_number    String
  entry_time      DateTime
  exit_time       DateTime?
  paid_amount     Int?
  user_id         Int
  User            User        @relation(fields: [user_id], references: [id])
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt

  @@map("vehicle_register")
}
